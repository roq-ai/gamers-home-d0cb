generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model freelancer_profile {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  email        String   @db.VarChar(255)
  firstname    String   @db.VarChar(255)
  lastname     String   @db.VarChar(255)
  address      String?  @db.VarChar(255)
  age          String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  country      String   @db.VarChar(255)
  gamingexp    String   @db.VarChar(255)
  gamingplat   String   @db.VarChar(255)
  gamingenre   String   @db.VarChar(255)
  streaminplat String?  @db.VarChar(255)
  streamingfrq String?  @db.VarChar(255)
  culbg        String   @db.VarChar(255)
  lang         String   @db.VarChar(255)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}
